package com.ronit.test;

import java.sql.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Component;

import com.ronit.entities.Company;
import com.ronit.entities.Coupon;
import com.ronit.enums.Category;
import com.ronit.enums.ClientType;
import com.ronit.exceptions.CouponSystemException;
import com.ronit.services.CompanyService;
import com.ronit.utils.LoginManager;

/* 
 * CommandLineRunner - a simple Spring Boot interface with a run method. 
 * Spring Boot will automatically call the run method of all beans implementing this 
 * interface after the application context has been load
 * 
 */

//@Component
public class CompanyTester implements CommandLineRunner {

	int companyID;

	@Autowired
	private ApplicationContext context;

	@Override
	public void run(String... args) throws Exception {
		startCompanyTester();
	}

	public void startCompanyTester() {

//		ApplicationContext context = SpringApplication.run(MainAdmin.class);
//		context.getBean(AdminService.class);
//		SpringApplication.run(Main.class);
//		System.out.println(Arrays.toString(Category.values()));

		LoginManager loginManager = context.getBean(LoginManager.class);
		try {
			CompanyService companyService = (CompanyService) 
					loginManager.login("aaa@mail", "aaa123",
					ClientType.COMPANY);
			System.out.println("loged in as company");

//			printCompanies(companyService);
// ************* NotWorking ******************
//			getAllCompanies(companyService);			
//			getCompanyCouponsByPrice(companyService);
// ************* Working ******************
//			deleteCoupon(companyService);
//			UpdateCoupon(companyService);
//			addCoupon(companyService);
//			getCompanyDetails(companyService);
//			getCompanyCoupons(companyService);
//			getAllCompanyCoupons(companyService);

		} catch (CouponSystemException e) {
			System.out.println("====== Error ========================");
			System.out.println(e.getMessage());
			System.out.println("====== ===== ========================");
			e.printStackTrace();
		}
	}

	public void addCoupon(CompanyService companyService) throws CouponSystemException {
		
		Coupon coupon = new Coupon( Category.VACATION, "HFHFHF", "gfgf", Date.valueOf("2022-12-17"),
				Date.valueOf("2021-12-18"), 5, 100.00, "ffff");
		System.out.println(coupon.getCompany());
		companyService.addCoupon(coupon);
		System.out.println(coupon.getCompany());
		
	}
	
	// not working
	public void UpdateCoupon(CompanyService companyService) throws CouponSystemException {
		
//		Coupon coupon = new Coupon(7, Category.FOOD, "food");
//		System.out.println(coupon);
//		

		Coupon coupon = new Coupon(15,Category.VACATION, "HFHFHFHF", "vvvv", Date.valueOf("2022-12-17"),
				Date.valueOf("2021-12-20"), 5, 100.00, "vvvv");
//		coupon.setId(3);
		companyService.UpdateCoupon(coupon);
	}

	
	// not working:
	// deleteCoupon faild - coupon not belong to this company
	public void deleteCoupon(CompanyService companyService) throws CouponSystemException {
		companyService.deleteCoupon(17, 8);
	}
	
	// not showing company id
	public List<Coupon> getCompanyCoupons(CompanyService companyService) throws CouponSystemException {
//		return companyService.getCompanyCoupons(Category.VACATION);
		for (Coupon coupon : companyService.getCompanyCoupons(Category.VACATION)) {
			System.out.println(coupon);
			
		}
		return null;
		
	}
	
	public List<Coupon> getCompanyCouponsByPrice(CompanyService companyService) throws CouponSystemException {
//		return companyService.getCompanyCouponsByPrice(1.3);
		for (Coupon coupon : companyService.getCompanyCouponsByPrice(10)) {
			 System.out.println(coupon);
		}
		return null;
		
	}

	// not showing company id
	public List<Coupon> getAllCompanyCoupons(CompanyService companyService) throws CouponSystemException{
//		return companyService.getAllCompanyCoupons(3);
		for (Coupon coupon : companyService.getAllCompanyCoupons()) {
			 System.out.println(coupon);
		}
		return null;

		
	}
	
	public Company getCompanyDetails(CompanyService companyService) throws CouponSystemException {
//		return companyService.getCompanyDetails(3);
		System.out.println(companyService.getCompanyDetails(2));
		return null;

		
	}

}